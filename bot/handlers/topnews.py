def handle_topnews(bot, message):
    chat_id = message.chat.id

    # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ CoinMarketCap
    cmc_data = bot.market_analyzer.get_full_analysis()
    cmc_news = cmc_data.get("news", [])[:3]  # –ë–µ—Ä—ë–º —Ç–æ–ø-3 –Ω–æ–≤–æ—Å—Ç–∏

    # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ CryptoPanic
    cryptopanic_news = bot.crypto_news_fetcher.fetch_news()[:3]  # –¢–æ–ø-3 –Ω–æ–≤–æ—Å—Ç–∏ —Å –∫—Ä–∞—Ç–∫–∏–º —Å–∞–º–º–∞—Ä–∏

    # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π
    if not cmc_news and not cryptopanic_news:
        bot.send_message(chat_id, "‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    def escape_markdown(text):
        escape_chars = r'_*[\]()~`>#+-=|{}.!'
        for char in escape_chars:
            text = text.replace(char, f"\\{char}")
        return text

    response = "üóûÔ∏è *–¢–û–ü –ù–æ–≤–æ—Å—Ç–∏ –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–∞ —Å–µ–π—á–∞—Å:*\n\n"

    # –ù–æ–≤–æ—Å—Ç–∏ –∏–∑ CoinMarketCap
    if cmc_news:
        response += "üöÄ *CoinMarketCap:*\n"
        for news_item in cmc_news:
            if " - " in news_item:
                title, url = news_item.rsplit(" - ", 1)
                response += f"‚Ä¢ [{escape_markdown(title.strip())}]({url.strip()})\n"
            else:
                response += f"‚Ä¢ {escape_markdown(news_item)}\n"
        response += "\n"

    # –ù–æ–≤–æ—Å—Ç–∏ –∏–∑ CryptoPanic (—Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º)
    if cryptopanic_news:
        response += "üîÆ *CryptoPanic:*\n"
        for news_item in cryptopanic_news:
            if " - " in news_item:
                summary, url = news_item.rsplit(" - ", 1)
                response += f"‚Ä¢ [{escape_markdown(summary.strip())}]({url.strip()})\n"
            else:
                response += f"‚Ä¢ {escape_markdown(news_item)}\n"

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.bot.send_message(
        chat_id, response,
        parse_mode="Markdown",
        disable_web_page_preview=True
    )
