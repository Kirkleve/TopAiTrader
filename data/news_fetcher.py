import requests
import pandas as pd


class NewsFetcher:
    @staticmethod
    def fetch_news_for_date(date, symbol="BTC"):
        try:
            date = pd.to_datetime(date)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∞—Ç—ã –≤ –±—É–¥—É—â–µ–º
            today = pd.Timestamp.now(tz='UTC').normalize().date()

            if date.date() > today:
                print(f"‚ö†Ô∏è –ó–∞–ø—Ä–æ—à–µ–Ω–∞ –¥–∞—Ç–∞ –∏–∑ –±—É–¥—É—â–µ–≥–æ ({date.date()}), –Ω–æ–≤–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
                return []

            api_url = f"https://cryptonews-api.com/api/v1?tickers={symbol}&date={date.strftime('%Y-%m-%d')}"

            response = requests.get(api_url, timeout=10)

            # –î–æ–±–∞–≤—å –∑–¥–µ—Å—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ 404
            if response.status_code == 404:
                # –ë–µ–∑ –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏, –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –¥–∞—Ç—É
                return []

            response.raise_for_status()

            news_data = response.json()

            if 'data' not in news_data or not isinstance(news_data['data'], list):
                print("‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:", news_data)
                return []

            news_list = [
                news_item['title'] + '. ' + news_item['text']
                for news_item in news_data['data']
                if 'title' in news_item and 'text' in news_item
            ]

            return news_list

        except requests.exceptions.RequestException as e:
            print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
            return []

        except (ValueError, TypeError) as e:
            print(f"üö® –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞—Ç—ã ({date}): {e}")
            return []
